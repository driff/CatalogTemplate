plugins {
    id 'version-catalog'
    id 'maven-publish'
}

group = 'com.driff'
version = '1.0.0'

repositories {
    mavenCentral()
}

catalog {
    versionCatalog{
        version("multidex_version", "2.0.1")
        version("android_core_version", "1.8.0")
        version("compose_version", "1.2.1")
        version("ktor_version", "2.1.0")
        version("dagger_version", "2.43.2")
        version("multidex_version", "2.0.1")
        version("mockk_version", "1.12.7")
        version("androidXTestVersion", "1.4.0")
        version("kotlin_version", "1.7.10")
        version("coroutines_version", "1.6.4")
        version("arrow_version", "1.1.2")
        version("compose_version", "1.3.0")
        version("lifecycle_version", "2.5.1")
        version("activity_compose_version", "1.5.1")
        version("junit_version", "4.13.2")
        version("junit_ext_version", "1.1.3")
        version("espresso_core_version", "3.4.0")
        version("kotlin", "1.6.21")

        plugin("kotlin-lang", "org.jetbrains.kotlin.jvm").versionRef("kotlin")
        plugin("kotlin-kapt", "org.jetbrains.kotlin.kapt").versionRef("kotlin")
        plugin("kotlin-allopen", "org.jetbrains.kotlin.plugin.allopen").versionRef("kotlin")
        plugin("hilt-android", "com.google.dagger.hilt.android").versionRef("dagger_version")

        library("kotlin-reflect", "org.jetbrains.kotlin", "kotlin-reflect")
                .versionRef("kotlin")
        library("kotlin-stdlib", "org.jetbrains.kotlin", "kotlin-stdlib-jdk8")
                .versionRef("kotlin")
        library("kotlinlogging", "io.github.microutils:kotlin-logging-jvm:2.1.23")
        library("logback", "ch.qos.logback:logback-classic:1.2.11")

        library("android-multidex", "androidx.multidex", "multidex").versionRef("multidex_version")
        library("androidx-core", "androidx.core", "core-ktx").versionRef("android_core_version")
        library("compose-ui", "androidx.compose.ui", "ui").versionRef("compose_version")
        library("compose-material", "androidx.compose.material", "material").versionRef("compose_version")
        library("compose-ui-preview", "androidx.compose.ui", "ui-tooling-preview").versionRef("compose_version")
        library("compose-livedata", "androidx.compose.runtime", "androidx.compose.runtime").versionRef("compose_version")
        library("android-lifecycle", "androidx.lifecycle", "lifecycle-runtime-ktx").versionRef("lifecycle_version")
        library("android-compose-activity", "androidx.activity", "activity-compose").versionRef("activity_compose_version")
        library("compose-fundation", "androidx.compose.foundation", "foundation").versionRef("compose_version")
        library("android-lifecycle-compose", "androidx.lifecycle", "lifecycle-viewmodel-compose").versionRef("lifecycle_version")
        library("ktor-core", "io.ktor", "ktor-client-core").versionRef("ktor_version")
        library("ktor-okhttp", "io.ktor", "ktor-client-okhttp").versionRef("ktor_version")
        library("ktor-android", "io.ktor", "ktor-client-android").versionRef("ktor_version")
        library("ktor-logging", "io.ktor", "ktor-client-logging").versionRef("ktor_version")
        library("ktor-content-negotiation", "io.ktor", "ktor-client-content-negotiation").versionRef("ktor_version")
        library("ktor-serialization", "io.ktor", "ktor-serialization-kotlinx-json").versionRef("ktor_version")
        library("ktor-client-res", "io.ktor", "ktor-client-resources").versionRef("ktor_version")
        library("arrow-core", "io.arrow-kt", "arrow-core").versionRef("arrow_version")
        library("tests-junit", "junit", "junit").versionRef("junit_version")
        library("tests-core", "androidx.test", "core").versionRef("androidXTestVersion")
        library("tests-coroutines", "org.jetbrains.kotlinx", "kotlinx-coroutines-test").versionRef("coroutines_version")
        library("tests-ktor-client", "io.ktor", "ktor-client-mock").versionRef("ktor_version")
        library("tests-ext-junit", "androidx.test.ext", "junit").versionRef("junit_ext_version")
        library("tests-spresso-core", "androidx.test.espresso", "espresso-core").versionRef("espresso_core_version")
        library("tests-ui-junit4", "androidx.compose.ui", "ui-test-junit4").versionRef("compose_version")
        library("tests-ui-tooling", "androidx.compose.ui", "ui-tooling").versionRef("compose_version")
        library("tests-ui-manifest", "androidx.compose.ui", "ui-test-manifest").versionRef("compose_version")
        library("tests-hilt-android", "com.google.dagger", "hilt-android-testing").versionRef("dagger_version")
        library("tests-mockk", "io.mockk", "mockk").versionRef("mockk_version")
        library("tests-mockk-jvm", "io.mockk", "mockk-agent-jvm").versionRef("mockk_version")
        library("di-hilt-android", "com.google.dagger", "hilt-android").versionRef("dagger_version")
        library("di-hilt-compiler",  "com.google.dagger", "hilt-compiler").versionRef("dagger_version")

        bundle("android-hilt", ["di-hilt-android"])
        bundle("android-kapt-all", ["di-hilt-compiler"])
        bundle("ktor-android", [
                "ktor-core",
                "ktor-okhttp",
                "ktor-android",
                "ktor-logging",
                "ktor-content-negotiation",
                "ktor-serialization",
                "ktor-client-res"
        ])

        bundle("android-base", [
                "android-multidex",
                "androidx-core",
                "compose-ui",
                "compose-material",
                "compose-fundation",
                "compose-ui-preview",
                "compose-livedata",
                "android-lifecycle",
                "android-lifecycle-compose",
                "android-compose-activity"
        ])

        bundle("android-testing", [
                "tests-junit",
                "tests-core",
                "tests-coroutines",
                "tests-ktor-client",
                "tests-ext-junit",
                "tests-spresso-core",
                "tests-ui-junit4",
                "tests-ui-tooling",
                "tests-ui-manifest",
                "tests-hilt-android",
                "tests-mockk",
                "tests-mockk-jvm"
        ])

    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.versionCatalog
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/driff/catalog-template"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}